#! /bin/bash

if (( $# != 1 )); then
	echo "Usage: gbp-release-build release-repo"
	exit 1
fi
cd $1 || exit 1

if which git-buildpackage; then
	build_comm="git-buildpackage"
elif which gbp; then
	build_comm="gbp buildpackage"
else
	echo "No git-buildpackage/gbp, sudo apt-get install -y git-buildpackage"
	exit 1
fi

git checkout upstream
pkg_names=$(catkin_topological_order --only-names)
if (( $? != 0 )); then
	echo "catkin_topological_order --only-names error"
	exit 1
fi

# clean local debs
rm /var/cache/pbuilder/result/* -rf

BRANCHES=$(git branch | grep "\sdebian/kinetic/$(lsb_release -cs)/")
#for BRANCH in ${BRANCHES}
for PACKAGE in $pkg_names
do
  BRANCH="debian/kinetic/xenial/$PACKAGE"
  echo "branch: $BRANCH"
  if ! git checkout ${BRANCH}; then
	  echo "Git checkout $BRANCH failed"
	  exit 1
  fi
  git clean -df

  gbp_args="--git-submodules -uc -us --git-ignore-branch --git-ignore-new"
  pbuilder_flags="--git-pbuilder --git-dist=xenial --git-arch=amd64"
  # need sudo to exec without password
  if ! sudo $build_comm $pbuilder_flags $gbp_args \
	--git-pbuilder-options="--buildresult /var/cache/pbuilder/result/" \
	&> ../${PACKAGE}.buildlog; then
	  echo "build deb failed"
	  exit 1
  fi

  # restore the debian release branch, or checkout fail
  git reset --hard
  git clean -df
done

echo 
echo "Generated:"
ls -1 /var/cache/pbuilder/result/*.deb 2> /dev/null

